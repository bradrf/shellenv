#!/bin/bash

hs="${HOME}/.homesick/repos/homeshick/bin/homeshick"
if [ ! -x "$hs" ]; then
    echo "Expected to find ${hs}" >&2
    exit 2
fi

FORCE=false
SSHARGS=''
REMOTE_HOME='\${HOME}' # intended to be expanded in remote shell

while [[ $# -gt 0 ]]; do
    case "$1" in
        --force) FORCE=true;;
        --ssh) shift; SSHARGS="$1";;
        --remote-home) shift; REMOTE_HOME="$1";;
        *) break;;
    esac
    shift
done

if [[ $# -ne 1 ]]; then
    cat <<EOF >&2

usage: $(basename "$0" .sh) [--force] [--remote-home <path>] [--ssh <args>] <host>

EOF
    exit 1
fi

HOST=$1

uris=$("$hs" list | awk '!/andsens\/homeshick/ { sub(/git@github/,"https://github",$3); print $3; }')

set -e
cat <<EOF | ssh -o 'StrictHostKeyChecking no' -o 'BatchMode yes' $SSHARGS "$HOST" /bin/sh
echo "${uris}"
${FORCE} && rm -rf ${REMOTE_HOME}/.homesick
if [ ! -d ${REMOTE_HOME}/.homesick ]; then
  set -e
  set -x
  which git >/dev/null 1>&2 || sudo DEBIAN_FRONTEND=noninteractive aptitude -y install git
  git clone git://github.com/andsens/homeshick.git "${REMOTE_HOME}/.homesick/repos/homeshick"
  for uri in ${uris}; do
    "${REMOTE_HOME}/.homesick/repos/homeshick/bin/homeshick" -b clone \$uri
    echo
  done
  [ -f "${REMOTE_HOME}/.bashrc" ] && mv -vf "${REMOTE_HOME}/.bashrc" "${REMOTE_HOME}/.orig-bashrc"
  "${REMOTE_HOME}/.homesick/repos/homeshick/bin/homeshick" -b link
fi
EOF
set +e

retitlessh "$HOST"
